name: Build and Push Multiple Docker Images

on:
  schedule:
    - cron: '32 13 * * *'
  push:
    branches: [ "main" ]
    # You can remove tags from triggers or keep if you want
    # tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_BASE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - name: PResSoMancy-julio
            dockerfile: PResSoMancy-julio/Dockerfile
            context: PResSoMancy-julio

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push with explicit "latest" tag (no version tags)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-${{ matrix.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the image digest (normal cosign sign, no attestation)
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request'
        env:
          IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_BASE_NAME }}-${{ matrix.name }}:latest
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          cosign sign --yes ${IMAGE_TAG}@${DIGEST}
